version: "3.8"

networks:
  traefik:
    name: traefik
  mysql:
    name: mysql
  prometheus:
    name: prometheus
  ipfs:
    name: ipfs

volumes:
  mysql:
    name: mysql
  prometheus:
    name: prometheus
  grafana:
    name: grafana
  matomo:
    name: matomo
  wordpress:
    name: wordpress
  resourcespace:
    name: resourcespace
  nextcloud:
    name: nextcloud
  portainer:
    name: portainer
  unifi-controller:
    name: unifi-controller
  kolibri:
    name: kolibri
  jellyfin:
    name: jellyfin
  ipfs-node:
    name: ipfs-node
  ipfs-cluster:
    name: ipfs-cluster

services:
  grafana:
    container_name: grafana
    image: grafana/grafana:7.3.7
    environment:
      GF_INSTALL_PLUGINS: grafana-clock-panel,natel-discrete-panel,grafana-piechart-panel
    labels:
      traefik.enable: "true"
      traefik.http.routers.grafana.entrypoints: websecure
      traefik.http.routers.grafana.rule: Host(`${DOMAIN_GRAFANA}`)
      traefik.http.routers.grafana.tls: "true"
      traefik.http.services.grafana.loadbalancer.server.port: 3000
    volumes:
      - grafana:/var/lib/grafana:rw
    networks:
      - traefik
      - prometheus
    restart: unless-stopped

  netdata:
    container_name: netdata
    cap_add:
      - SYS_PTRACE
    environment:
      PGID: ${DOCKER_PGID}
    hostname: ${DOMAIN_NETDATA}
    image: netdata/netdata:v1.28.0-amd64
    labels:
      traefik.enable: "true"
      traefik.http.routers.netdata.entrypoints: websecure
      traefik.http.routers.netdata.rule: Host(`${DOMAIN_NETDATA}`)
      traefik.http.routers.netdata.tls: "true"
      traefik.http.services.netdata.loadbalancer.server.port: 19999
    networks:
      - traefik
      - prometheus
    restart: unless-stopped
    security_opt:
      - apparmor:unconfined
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro

  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.24.1
    labels:
      traefik.enable: "true"
      traefik.http.routers.prometheus.entrypoints: websecure
      traefik.http.routers.prometheus.rule: Host(`${DOMAIN_PROMETHEUS}`)
      traefik.http.routers.prometheus.tls: "true"
      traefik.http.services.prometheus.loadbalancer.server.port: 9090
    networks:
      - traefik
      - prometheus
    restart: unless-stopped
    volumes:
      - ./config/services/prometheus:/etc/prometheus
      - prometheus:/prometheus
    command: --web.enable-lifecycle  --config.file=/etc/prometheus/prometheus.yml

  traefik:
    container_name: traefik
    image: traefik:v2.3.6
    labels:
      traefik.enable: "true"
      traefik.http.routers.traefik.entrypoints: websecure
      traefik.http.routers.traefik.rule: Host(`${DOMAIN_TRAEFIK}`)
      traefik.http.routers.traefik.service: api@internal
      traefik.http.routers.traefik.tls: "true"
      traefik.http.services.traefik.loadbalancer.server.port: 8080
    networks:
      - traefik
      - prometheus
    ports:
      - 80:80
      - 443:443
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  mariadb:
    container_name: ${MYSQL_HOST}
    image: mariadb:10.5.8-focal
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    networks:
      - mysql
      - prometheus
    restart: unless-stopped
    volumes:
      - mysql:/var/lib/mysql

  matomo:
    container_name: matomo
    hostname: ${DOMAIN_MATOMO}
    image: matomo:4.1.1-apache
    restart: unless-stopped
    volumes:
      - matomo:/var/www/html
    environment:
      MATOMO_DATABASE_HOST: ${MYSQL_HOST}
      MATOMO_DATABASE_ADAPTER: mysql
      MATOMO_DATABASE_TABLES_PREFIX: matomo_
      MATOMO_DATABASE_USERNAME: ${MYSQL_USER_MATOMO}
      MATOMO_DATABASE_PASSWORD: ${MYSQL_PASSWORD_MATOMO}
      MATOMO_DATABASE_DBNAME: ${MYSQL_DATABASE_MATOMO}
    networks:
      - mysql
      - traefik
    labels:
      traefik.enable: "true"
      traefik.http.routers.matomo.entrypoints: websecure
      traefik.http.routers.matomo.rule: Host(`${DOMAIN_MATOMO}`)
      traefik.http.routers.matomo.tls: "true"
      traefik.http.services.matomo.loadbalancer.server.port: 80
    depends_on:
      - mariadb

  ipfs-node:
    container_name: ipfs-node
    image: ipfs/go-ipfs:latest # TODO pin version
    networks:
      - traefik
      - ipfs
    restart: unless-stopped
    ports:
      - 4001:4001
      - 4001:4001/udp
    volumes:
      - ipfs-node:/data/ipfs
    labels:
      traefik.enable: "true"
      traefik.http.routers.ipfs-node.entrypoints: websecure
      traefik.http.routers.ipfs-node.rule: HostRegexp(`${DOMAIN_IPFS_NODE}`)
      traefik.http.routers.ipfs-node.tls: "true"
      traefik.http.routers.ipfs-node.middlewares: traefik-auth
      traefik.http.routers.ipfs-node.service: ipfs-node
      traefik.http.services.ipfs-node.loadbalancer.server.port: 5001

  ipfs-cluster:
    container_name: ipfs-cluster
    image: ipfs/ipfs-cluster:latest # TODO pin version
    networks:
      - traefik
      - ipfs
    depends_on:
      - ipfs-node
    environment:
      CLUSTER_PEERNAME: ipfs-cluster
      CLUSTER_SECRET: ${IPFS_CLUSTER_SECRET} # TODO
      CLUSTER_IPFSHTTP_NODEMULTIADDRESS: /dns4/ipfs-node/tcp/5001
      CLUSTER_CRDT_TRUSTEDPEERS: '*'
      CLUSTER_RESTAPI_HTTPLISTENMULTIADDRESS: /ip4/0.0.0.0/tcp/9094
      CLUSTER_PINSVCAPI_HTTPLISTENMULTIADDRESS: /ip4/0.0.0.0/tcp/9097
      CLUSTER_RESTAPI_CORSALLOWEDMETHODS: GET, POST
      CLUSTER_RESTAPI_CORSALLOWEDORIGINS: '*'
      CLUSTER_MONITORPINGINTERVAL: 2s # Speed up peer discovery
    volumes:
      - ipfs-cluster:/data/ipfs-cluster
    labels:
      traefik.enable: "true"
      traefik.http.routers.ipfs-cluster.entrypoints: websecure
      traefik.http.routers.ipfs-cluster.rule: HostRegexp(`${DOMAIN_IPFS_CLUSTER}`)
      traefik.http.routers.ipfs-cluster.tls: "true"
      traefik.http.routers.ipfs-cluster.service: ipfs-cluster
      traefik.http.routers.ipfs-cluster.middlewares: traefik-auth
      traefik.http.services.ipfs-cluster.loadbalancer.server.port: 9094
      traefik.http.middlewares.strip-pinning-prefix.stripprefix.prefixes: /pinning
      traefik.http.routers.ipfs-pinning.entrypoints: websecure
      traefik.http.routers.ipfs-pinning.rule: HostRegexp(`${DOMAIN_IPFS_CLUSTER}`) && PathPrefix(`/pinning/`)
      traefik.http.routers.ipfs-pinning.tls: "true"
      traefik.http.routers.ipfs-pinning.service: ipfs-pinning
      traefik.http.routers.ipfs-pinning.middlewares: traefik-auth
      traefik.http.routers.ipfs-pinning.middlewares: strip-pinning-prefix
      traefik.http.services.ipfs-pinning.loadbalancer.server.port: 9097



  wordpress:
    container_name: wordpress
    depends_on:
      - mariadb
    image: wordpress:5.6.0-php7.4-apache
    environment:
      WORDPRESS_DB_HOST: ${MYSQL_HOST}
      WORDPRESS_DB_USER: ${MYSQL_USER_WORDPRESS}
      WORDPRESS_DB_PASSWORD: ${MYSQL_PASSWORD_WORDPRESS}
      WORDPRESS_DB_NAME: ${MYSQL_DATABASE_WORDPRESS}
      WORDPRESS_CONFIG_EXTRA: |
        define('WP_ALLOW_MULTISITE', true );
    networks:
      - mysql
      - traefik
    restart: unless-stopped
    volumes:
      - wordpress:/var/www/html
    labels:
      traefik.enable: "true"
      traefik.http.routers.wordpress.entrypoints: websecure
      traefik.http.routers.wordpress.rule: HostRegexp(`${DOMAIN_WORDPRESS}`)
      traefik.http.routers.wordpress.tls: "true"
      traefik.http.services.wordpress.loadbalancer.server.port: 80

  resourcespace:
    container_name: resourcespace
    image: suntorytimed/resourcespace:latest
    restart: unless-stopped
    depends_on:
      - mariadb
    volumes:
      - resourcespace:/var/www/html
    networks:
      - traefik
      - mysql
    labels:
      traefik.enable: "true"
      traefik.http.routers.resourcespace.entrypoints: websecure
      traefik.http.routers.resourcespace.rule: Host(`${DOMAIN_RESOURCESPACE}`)
      traefik.http.routers.resourcespace.tls: "true"
      traefik.http.services.resourcespace.loadbalancer.server.port: 80

  kiwix:
    container_name: kiwix
    image: kiwix/kiwix-serve
    command:
      - --library
      - ${KIWIX_DATA_DIR}/library.xml
    restart: unless-stopped
    volumes:
      - ${KIWIX_DATA_DIR}:${KIWIX_DATA_DIR}
      - ${TRANSMISSION_DOWNLOADS_DIR}:${TRANSMISSION_DOWNLOADS_DIR}
    networks:
      - traefik
    labels:
      traefik.enable: "true"
      traefik.http.routers.kiwix.entrypoints: websecure
      traefik.http.routers.kiwix.rule: Host(`${DOMAIN_KIWIX}`)
      traefik.http.routers.kiwix.tls: "true"
      traefik.http.services.kiwix.loadbalancer.server.port: 80

  transmission:
    image: linuxserver/transmission
    container_name: transmission
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
    volumes:
      - ${TRANSMISSION_CONFIG_DIR}:/config
      - ${TRANSMISSION_DOWNLOADS_DIR}:/downloads
      - ${TRANSMISSION_WATCH_DIR}:/watch
    ports:
      - 51413:51413
      - 51413:51413/udp
    restart: unless-stopped
    depends_on:
      - traefik
    networks:
      - traefik
    labels:
      traefik.enable: "true"
      traefik.http.routers.transmission.entrypoints: websecure
      traefik.http.routers.transmission.rule: Host(`${DOMAIN_TRANSMISSION}`)
      traefik.http.routers.transmission.tls: "true"
      traefik.http.services.transmission.loadbalancer.server.port: 9091

  unifi-poller:
    container_name: unifi-poller
    restart: unless-stopped
    image: golift/unifi-poller:latest
    environment:
      UP_INFLUXDB_DISABLE: "true"
      UP_UNIFI_DEFAULT_URL: ${UP_UNIFI_DEFAULT_URL}
      UP_UNIFI_DEFAULT_USER: ${UP_UNIFI_DEFAULT_USER}
      UP_UNIFI_DEFAULT_PASS: ${UP_UNIFI_DEFAULT_PASS}
    networks:
      - prometheus

  nextcloud:
    image: nextcloud:latest
    container_name: nextcloud
    environment:
      MYSQL_PASSWORD: ${MYSQL_PASSWORD_NEXTCLOUD}
      MYSQL_DATABASE: ${MYSQL_DATABASE_NEXTCLOUD}
      MYSQL_USER: ${MYSQL_USER_NEXTCLOUD}
      MYSQL_HOST: ${MYSQL_HOST}
    volumes:
      - ${NEXTCLOUD_CONFIG_DIR}:/config
      - nextcloud:/var/www/html
    restart: unless-stopped
    networks:
      - mysql
      - prometheus
      - traefik
    labels:
      traefik.enable: "true"
      traefik.http.routers.nextcloud.entrypoints: websecure
      traefik.http.routers.nextcloud.rule: Host(`${DOMAIN_NEXTCLOUD}`)
      traefik.http.routers.nextcloud.tls: "true"
      traefik.http.services.nextcloud.loadbalancer.server.port: 80

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - portainer:/data
    networks:
      - prometheus
      - traefik
    labels:
      traefik.enable: "true"
      traefik.http.routers.portainer.entrypoints: websecure
      traefik.http.routers.portainer.rule: Host(`${DOMAIN_PORTAINER}`)
      traefik.http.routers.portainer.tls: "true"
      traefik.http.services.portainer.loadbalancer.server.port: 9000

  unifi-controller:
    image: linuxserver/unifi-controller
    container_name: unifi-controller
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
    volumes:
      - unifi-controller:/config
    ports:
      - 3478:3478/udp
      - 10001:10001/udp
      - 8080:8080
      - 1900:1900/udp
      - 6789:6789
      - 5514:5514/udp
    restart: unless-stopped
    networks:
      - prometheus
      - traefik
    labels:
      traefik.enable: "true"
      traefik.http.routers.unifi-controller.entrypoints: websecure
      traefik.http.routers.unifi-controller.rule: Host(`${DOMAIN_UNIFI_CONTROLLER}`)
      traefik.http.routers.unifi-controller.tls: "true"
      traefik.http.services.unifi-controller.loadbalancer.server.scheme: https
      traefik.http.services.unifi-controller.loadbalancer.server.port: 8443

  jellyfin:
    image: linuxserver/jellyfin
    container_name: jellyfin
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
      JELLYFIN_PublishedServerUrl: https://${DOMAIN_JELLYFIN}
    volumes:
      - jellyfin:/config
      - ${JELLYFIN_DATA_DIR}:/data
      - ${TRANSMISSION_DOWNLOADS_DIR}:/downloads
    ports:
      - 7359:7359/udp
      # - 1900:1900/udp  # Can't be used at 1900 because that clashes with unif-controller
    restart: unless-stopped
    labels:
      traefik.enable: "true"
      traefik.http.routers.jellyfin.entrypoints: websecure
      traefik.http.routers.jellyfin.rule: Host(`${DOMAIN_JELLYFIN}`)
      traefik.http.routers.jellyfin.tls: "true"
      traefik.http.services.jellyfin.loadbalancer.server.port: 8096
    networks:
      - traefik

  kolibri:
    image: neethumohan1212/kolibri
    container_name: kolibri
    restart: unless-stopped
    environment:
      TZ: ${TZ}
    volumes:
      - kolibri:/root:rw
    labels:
      traefik.enable: "true"
      traefik.http.routers.kolibri.entrypoints: websecure
      traefik.http.routers.kolibri.rule: Host(`${DOMAIN_KOLIBRI}`)
      traefik.http.routers.kolibri.tls: "true"
      traefik.http.services.kolibri.loadbalancer.server.port: 8080
    networks:
      - traefik
