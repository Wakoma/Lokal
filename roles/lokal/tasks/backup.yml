- name: "Get current timestamp"
  register: timestamp_result
  shell: date '+%Y%m%dT%H%M%S'

- name: "Get name of backup directory"
  set_fact:
    backup_dir: "{{backup_root}}/{{app}}/{{timestamp_result.stdout}}"

- name: "Create {{app}} backup dir"
  ansible.builtin.file:
    path: "{{backup_dir}}"
    state: directory

- name: "Stop {{app}} service"
  ansible.builtin.shell:
    cmd: "docker compose stop"
    chdir: "{{project_root}}/{{app}}"

- name: "Backup {{app}} data"
  ansible.builtin.shell:
    cmd: "tar -czf {{backup_dir}}/files.tgz ."
    chdir: "{{project_root}}/{{app}}"
  become: yes # we need to become root to preserve docker's user owner of the files

- name: "Backup {{app}} MySQL to {{backup_dir}}"
  ansible.builtin.shell:
    cmd: >
      docker exec mariadb
      mysqldump -u root --password={{mysql_root_password}} --routines --triggers --add-drop-table --flush-logs
      {{mysql_db}} | gzip > {{backup_dir}}/mysql.sql.gz
    chdir: "{{project_root}}/base"
  when: mysql_db is defined

- name: "Backup {{app}} PostgreSQL to {{backup_dir}}"
  ansible.builtin.shell:
    cmd: >
      docker exec postgres
      pg_dump -U postgres {{postgres_db}} | gzip > {{backup_dir}}/postgres.sql.gz
    chdir: "{{project_root}}/base"
  when: postgres_db is defined

- name: "Start the service again"
  ansible.builtin.shell:
    cmd: "docker compose start"
    chdir: "{{project_root}}/{{app}}"
