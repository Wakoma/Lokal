version: "3"

networks:
  ipam:
    config:
      - subnet: "{{tunnel_subnet_openwisp}}"
  openwisp: {}

services:
  dashboard:
    image: openwisp/openwisp-dashboard:latest
    restart: always
    build:
      context: images
      dockerfile: openwisp_dashboard/Dockerfile
    environment: &common_settings
      DASHBOARD_APP_PORT: 8000
      DASHBOARD_APP_SERVICE: dashboard
      PYTHONUNBUFFERED: 1
      TZ: "{{tz}}"
      DASHBOARD_INTERNAL: dashboard
      API_INTERNAL: api
      DB_ENGINE: django.contrib.gis.db.backends.postgis
      DB_NAME: "{{db_name_openwisp}}"
      DB_USER: "{{db_user_openwisp}}"
      DB_PASS: "{{db_pass_openwisp}}"
      DB_HOST: "{{host_postgres}}"
      DB_PORT: "{{port_postgres}}"
      DB_SSLMODE: disable
      DB_SSLKEY: None
      DB_SSLCERT: None
      DB_SSLROOTCERT: None
      DB_OPTIONS: "{}"
      VPN_NAME: default
      DEBUG_MODE: "False"
      REDIS_HOST: redis
      INFLUXDB_DB: "{{influxdb_name_openwisp}}"
      INFLUXDB_USER: "{{influxdb_user_openwisp}}"
      INFLUXDB_PASS: "{{influxdb_pass_openwisp}}"
      INFLUXDB_HOST: influxdb
      INFLUXDB_PORT: 8086
      INFLUXDB_DEFAULT_RETENTION_POLICY: 0m0s
      EMAIL_BACKEND: mail.backends.CeleryEmailBackend
      EMAIL_HOST: postfix
      EMAIL_HOST_PORT: 25
      EMAIL_HOST_USER: ""
      EMAIL_HOST_PASSWORD: ""
      EMAIL_HOST_TLS: False
      EMAIL_TIMEOUT: 10
      EMAIL_DJANGO_DEFAULT: "{{email_admin}}"
      DJANGO_LOG_LEVEL: ERROR
      DJANGO_LANGUAGE_CODE: {{lang}}
      DJANGO_FREERADIUS_ALLOWED_HOSTS: "{{tunnel_subnet_openwisp}}"
      DJANGO_X509_DEFAULT_CERT_VALIDITY: 1825
      DJANGO_X509_DEFAULT_CA_VALIDITY: 3650
      DJANGO_SECRET_KEY: "{{(lokal_secret + 'django_secret_key') | hash('sha1') | regex_search('\\w{12}') }}"
      DJANGO_CORS_HOSTS: "{{domain}}"
      DJANGO_SENTRY_DSN: ""
      DJANGO_LEAFET_CENTER_X_AXIS: 0
      DJANGO_LEAFET_CENTER_Y_AXIS: 0
      DJANGO_LEAFET_ZOOM: 1
      # VPN Configurations
      VPN_DOMAIN: "mesh.{{domain}}"
      VPN_NAME: default
      VPN_CLIENT_NAME: default-management-vpn
      X509_NAME_CA: default
      X509_NAME_CERT: default
      X509_COUNTRY_CODE: "{{country}}"
      X509_STATE: default
      X509_CITY: default
      X509_ORGANIZATION_NAME: "{{project_name}}"
      X509_ORGANIZATION_UNIT_NAME: "{{project_name}}"
      X509_EMAIL: "{{email_admin}}"
      X509_COMMON_NAME: "{{project_name}}"
      # Modules Enabled
      USE_OPENWISP_RADIUS: "True"
      USE_OPENWISP_TOPOLOGY: "True"
      USE_OPENWISP_FIRMWARE: "True"
      USE_OPENWISP_MONITORING: "True"
    volumes:
      - "{{app_root}}/static:/opt/openwisp/static"
      - "{{app_root}}/media:/opt/openwisp/media"
      - "{{app_root}}/private:/opt/openwisp/private"
      - "{{app_root}}/influxdb:/var/lib/influxdb"
      # - ./customization/configuration/django/:/opt/openwisp/openwisp/configuration:ro
    depends_on:
      - postgres
      - redis
      - postfix
      - influxdb

  api:
    image: openwisp/openwisp-api:latest
    restart: always
    environment:
      API_APP_PORT: 8001
      *common_settings
    volumes:
      - "{{project_root}}/influxdb:/var/lib/influxdb"
      - "{{project_root}}/media:/opt/openwisp/media"
      - "{{project_root}}/private:/opt/openwisp/private"
      # - "{{project_root}}/./customization/configuration/django/:/opt/openwisp/openwisp/configuration:ro
    depends_on:
      - dashboard
    networks:
      - postgres
      - redis
      - openwisp

  websocket:
    image: openwisp/openwisp-websocket:latest
    restart: always
    environment:
      WEBSOCKET_APP_PORT: 8002
      *common_settings
    depends_on:
      - dashboard

  celery:
    image: openwisp/openwisp-dashboard:latest
    restart: always
    environment:
      - MODULE_NAME=celery
      *common_settings
      &celery_settings
      CRON_DELETE_OLD_RADACCT: 365
      CRON_DELETE_OLD_POSTAUTH: 365
      CRON_CLEANUP_STALE_RADACCT: 365
      CRON_DELETE_OLD_USERS: 12
    volumes:
      - "{{app_root}}/media:/opt/openwisp/media"
      - "{{app_root}}/private:/opt/openwisp/private"
      # - ./customization/configuration/django/:/opt/openwisp/openwisp/configuration:ro
    networks:
      - postgres
      - openwisp
    depends_on:
      - postgres
      - redis
      - dashboard

  celery_monitoring:
    image: openwisp/openwisp-dashboard:latest
    restart: always
    environment:
      - MODULE_NAME=celery_monitoring
      *common_settings
      *celery_settings
    volumes:
      - "{{app_root}}/media:/opt/openwisp/media"
      - "{{app_root}}/private:/opt/openwisp/private"
      # - ./customization/configuration/django/:/opt/openwisp/openwisp/configuration:ro
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
      - dashboard

  celerybeat:
    image: openwisp/openwisp-dashboard:latest
    restart: always
    environment:
      MODULE_NAME: celerybeat
      *celery_settings
      *common_settings
    depends_on:
      - postgres
      - redis
      - dashboard

  nginx:
    image: openwisp/openwisp-nginx:latest
    restart: always
    environment:
      SSL_CERT_MODE: "No"
      API_DOMAIN: "mesh.{{domain}}"
      DASHBOARD_DOMAIN: "mesh.{{domain}}"
      DASHBOARD_INTERNAL: dashboard
      API_INTERNAL: api
    volumes:
    - "{{app_root}}/static:/opt/openwisp/public/static:ro"
    - "{{app_root}}/media:/opt/openwisp/public/media:ro"
    - "{{app_root}}/private:/opt/openwisp/public/private:ro"
    - "{{app_root}}/certs:/etc/letsencrypt"
    # - ./customization/theme:/opt/openwisp/public/custom:ro
    networks:
      traefik: {}
      openwisp:
        aliases:
        - dashboard.internal
        - api.internal
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - dashboard
      - api
      - websocket

  freeradius: # TODO
    image: openwisp/openwisp-freeradius:latest
    restart: always
    build:
      context: images
      dockerfile: openwisp_freeradius/Dockerfile
    env_file:
      - .env
    ports:
      - "1812:1812/udp"
      - "1813:1813/udp"
    networks:
      - postgres
    depends_on:
      - api
      - dashboard

  # postfix:
  #   image: openwisp/openwisp-postfix:latest
  #   restart: always
  #     dockerfile: openwisp_postfix/Dockerfile
  #   environment:
  #     MODULE_NAME: postfix
  #     TZ: "{{tz}}"
  #     POSTFIX_MYHOSTNAME: "mail"
  #     POSTFIX_ALLOWED_SENDER_DOMAINS: "{{domain}}"
  #     POSTFIX_RELAYHOST: null
  #     POSTFIX_DESTINATION: "{{domain}}"
  #     POSTFIX_RELAYHOST_USERNAME: null
  #     POSTFIX_RELAYHOST_PASSWORD: null
  #     POSTFIX_RELAYHOST_TLS_LEVEL: may
  #     POSTFIX_MYNETWORKS: '170.0.0.0/8 [::1]/128 '
  #     POSTFIX_MESSAGE_SIZE_LIMIT: 0
  #     POSTFIX_DEBUG_MYNETWORKS: null
  #   volumes:
  #     - {{project_root}}/{{domain}}.crt:/etc/ssl/mail/{{domain}}.crt
  #     - {{project_root}}/{{domain}}.key:/etc/ssl/mail/{{domain}}.key

{% if setup_tunnel_openwisp %}
  openvpn:
    image: kylemanna/openvpn:{{tunnel_version_openwisp}}
    restart: always
    ports:
      - "1194:1194/udp"
    volumes:
      - "{{app_root}}/openvpn:/etc/openvpn"
    environment:
      MODULE_NAME: openvpn
      *common_settings
    networks:
      - postgres
    cap_add:
      - NET_ADMIN
{% endif %}

  influxdb:
    image: influxdb:1.8-alpine
    restart: always
    environment:
      INFLUXDB_DB: "{{influxdb_name_openwisp}}"
      INFLUXDB_USER: "{{influxdb_user_openwisp}}"
      INFLUXDB_USER_PASSWORD: "{{influxdb_pass_openwisp}}"
    volumes:
      - "{{app_root}}/influxdb:/var/lib/influxdb"
    networks:
    - openwisp

  redis:
    image: redis:alpine
    restart: always
    networks:
    - openwisp
