- name: List possible backup files
  ansible.builtin.find:
    paths: "{{backup_root}}/wordpress"
    file_type: directory
  register: available_backups

- name: Get the latest backup
  ansible.builtin.set_fact:
    latest_backup: "{{ available_backups.files | sort(attribute='mtime',reverse=true) | first }}"
  
- name: Debug latest_backup variable
  ansible.builtin.debug:
    var: latest_backup
    
- name: Get the latest backup
  ansible.builtin.fail:
    msg: No backup was found
  when: latest_backup is falsy
  
- name: "Stop the service"
  ansible.builtin.shell:
    cmd: "docker-compose down"
    chdir: "{{project_root}}/wordpress"
  ignore_errors: yes

- name: "Restore data"
  ansible.builtin.shell:
    cmd: "tar -xzf {{latest_backup.path}}/files.tgz"
    chdir: "{{project_root}}/wordpress"
  become: yes

- name: "Restore DB"
  community.mysql.mysql_db:
    state: import
    name: "{{mysql_database_wordpress}}"
    target: database.sql.gz
    login_user: root
    login_password: "{{mysql_root_password}}"
    login_port: "{{mysql_port}}"
    login_host: localhost
    chdir: "{{latest_backup.path}}"
    force: yes
  register: restore_output

- name: Print debug DB commands run
  ansible.builtin.debug:
    var: restore_output.executed_commands

- name: "Start the service again"
  ansible.builtin.shell:
    cmd: "docker-compose up -d"
    chdir: "{{project_root}}/wordpress"
