---
- name: Create app dirs
  ansible.builtin.file:
    path: '{{project_root}}/base/{{item}}'
    state: directory
  loop:
    - fail2ban/filter.d
    - fail2ban/jail.d
    - ldap
    - mariadb
    - postgres
    - prometheus/data
    - prometheus/etc
    - traefik/acme
    - traefik/conf
    - traefik/data
    - traefik/log
    - traefik/dump
    - transmission
    - portainer

- name: "Install necessary base software"
  package:
    name:
      - python3-passlib
    state: present
  become: true
  when: ansible_facts['system'] == "Linux" # disable on OSes without package managers

- name: Ensure docker config directory exists
  file:
    state: directory
    dest: /etc/docker
    group: docker
  become: true

- name: Ensure docker config file exists
  copy:
    content: "{\n}\n"
    dest: /etc/docker/daemon.json
    group: docker
    force: false
  become: true

- name: Ensure docker metrics are available for Prometheus"
  lineinfile:
    regexp: 'metrics-addr'
    line: '"metrics-addr": "0.0.0.0:9323"'
    insertbefore: "}"
    path: /etc/docker/daemon.json
  become: true

- name: Init IPTABLES firewall
  ansible.builtin.import_role:
    name: geerlingguy.firewall.d
  vars:
    firewall_state: started
    firewall_enabled_at_boot: true
    firewall_allowed_tcp_ports:
      # ssh
      - "{{ansible_port | default(22)}}"
      # web
      - 80
      - 443
      - 8448 # federation
      # transmission
      - 9091
      - 51413
    firewall_allowed_udp_ports:
      # transmission
      - 51413
    firewall_disable_ufw: true
    firewall_flush_filter_chains: ["INPUT"]
    firewall_flush_rules_and_chains: false
    firewall_restart_docker: true
  become: true

- name: "Render traefik configuration"
  ansible.builtin.template:
    src: traefik/dynamic.yml.j2
    dest: '{{project_root}}/base/traefik/conf/dynamic.yml'

- name: "Copy prometheus config"
  ansible.builtin.copy:
    src: files/prometheus
    dest: '{{project_root}}/base/prometheus/etc/'

- name: "Copy dumper's hook"
  ansible.builtin.copy:
    src: files/dumper
    dest: '{{project_root}}/base/'

- name: Render traefik fail2ban filter
  template:
    src: fail2ban/traefik-filter.conf.j2
    dest: '{{project_root}}/base/fail2ban/filter.d/traefik-filter.conf'

- name: Render traefik fail2ban jail
  template:
    src: fail2ban/traefik-jail.conf.j2
    dest: '{{project_root}}/base/fail2ban/jail.d/traefik.conf'

- name: Render ldap config
  template:
    src: ldap/lldap_config.toml.j2
    dest: '{{project_root}}/base/ldap/lldap_config.toml'

- name: Render base docker-compose.yml
  ansible.builtin.template:
    src: compose.yml.j2
    dest: '{{project_root}}/base/docker-compose.yml'

- name: Docker-compose up
  ansible.builtin.shell:
    cmd: "docker compose up -d"
    chdir: "{{project_root}}/base"

- name: Give the base time to boot up - takes at least 10 seconds
  ansible.builtin.pause:
    seconds: 10
