---
- name: Export app_root variable
  ansible.builtin.set_fact:
    app_root: "{{project_root}}/{{app}}"

- name: Docker-compose down
  ansible.builtin.shell: 
    cmd: docker-compose down
    chdir: "{{app_root}}"
  notify:
    - Restart router

- name: Remove MySQL user {{mysql_user}}
  community.mysql.mysql_user:
    name: "{{mysql_user}}"
    priv: '{{mysql_db}}.*:ALL'
    host: '%'
    state: absent
    login_user: root
    login_password: "{{mysql_root_password}}"
    login_port: "{{mysql_port}}"
  when: mysql_db is defined

- name: Remove MySQL database {{mysql_db}}
  community.mysql.mysql_db:
    name: "{{mysql_db}}"
    login_user: root
    login_password: "{{mysql_root_password}}"
    login_port: "{{mysql_port}}"
    state: absent
  when: mysql_db is defined

- name: Remove PostgreSQL database {{postgres_db}}
  community.postgresql.postgresql_db:
    name: "{{postgres_db}}"
    login_host: localhost
    login_password: "{{postgres_root_password}}"
    login_port: "{{postgres_port}}"
    owner: "{{postgres_user}}"
    state: absent
  when: postgres_db is defined

- name: Remove PostgreSQL user {{postgres_user}}
  community.postgresql.postgresql_user:
    name: "{{postgres_user}}"
    password: "{{postgres_password}}"
    login_host: localhost
    login_password: "{{postgres_root_password}}"
    login_port: "{{postgres_port}}"
    state: absent
  when: postgres_db is defined

- name: Remove firewall rules
  vars:
    firewall_remove: true
    firewall_group: "{{app}}"
  ansible.builtin.import_role:
    name: geerlingguy.firewall.d
  become: true
  when: firewall
  notify: Reload docker

- name: Remove the app directory {{app_root}}
  ansible.builtin.file:
    path: "{{app_root}}"
    state: absent
  become: true

- name: Docker purge unused images
  ansible.builtin.shell: 
    cmd: docker image prune -f
    chdir: "{{project_root}}"