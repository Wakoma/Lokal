---
- name: Install qpixel
  include_role:
    name: lokal
    tasks_from: install
  vars:
    app: qpixel
    app_domain: "{{qpixel_domain}}"
    app_port: 3000
    data_dirs:
    - data
    - config
    - log
    mysql_db: "{{qpixel_mysql}}"
    mysql_user: "{{qpixel_mysql_user}}"
    mysql_password: "{{qpixel_mysql_password}}"
    minio_user: "{{qpixel_minio_user}}"
    minio_password: "{{qpixel_minio_password}}"
    minio_bucket: "{{qpixel_minio_bucket}}"
    start: false # you can postpone starting (by defaults the container starts)

# qpixel's entrypoint runs migrations for preduction and development databases
# non-negotiable. Once I get more info about the app, I can remove that
- name: Create MySQL-dev database and user
  ansible.builtin.import_tasks:
    file: roles/lokal/tasks/mysqldb/create.yml
  vars:
    mysql_db: "{{qpixel_mysql}}_dev"
    mysql_user: "{{qpixel_mysql_user}}"
    mysql_password: "{{qpixel_mysql_password}}"

- name: Render database config
  ansible.builtin.template:
    src: "database.yml"
    dest: "{{app_root}}/config/database.yml"
    force: false

- name: Render storage config
  ansible.builtin.template:
    src: "storage.yml"
    dest: "{{app_root}}/config/storage.yml"
    force: false

- name: Copy a needed file (but I have no clue what it does)
  ansible.builtin.copy:
    src: "files/.irbrc"
    dest: "{{app_root}}/.irbrc" # {{app_root}} is accessible because the lokal.install already ran
    force: false

# This is the command to start your app manually
- name: Start the app
  ansible.builtin.shell:
    cmd: "docker compose up -d"
    chdir: "{{app_root}}"