---
- name: Deploy Azuracast
  hosts: all
  tasks:

    - name: Register primary user's details
      user:
        name: "{{ primary_ssh_user }}"
      register: primary_ssh_user_params

    - name: Set facts
      set_fact:
        lokal_dir: "{{ primary_ssh_user_params.home }}/Lokal"
        azuracast_dir: "{{ primary_ssh_user_params.home }}/azuracast"
        domain_azuracast: "radio.{{ lookup('env', 'DOMAIN') }}"
        cert_resolver: "{{ lookup('env', 'CERT_RESOLVER') | default('dns', true) }}"
        server_is_public: "{{ lookup('env', 'SERVER_IS_PUBLIC') | default(false, true) }}"

    - name: Make Azuracast installation directory
      file:
        path: "{{ azuracast_dir }}"
        state: directory

    - name: Download Azuracast Docker wrapper
      uri:
        url: https://raw.githubusercontent.com/AzuraCast/AzuraCast/main/docker.sh
        dest: "{{ azuracast_dir }}/docker.sh"
        mode: a+x

    - name: Copy .env from template
      ansible.builtin.template:
        src: "{{ lokal_dir }}/config/services/azuracast/.env.j2"
        dest: "{{ azuracast_dir }}/.env"
        mode: "0600"

    - name: Copy azuracast.env from template
      ansible.builtin.template:
        src: "{{ lokal_dir }}/config/services/azuracast/azuracast.env.j2"
        dest: "{{ azuracast_dir }}/azuracast.env"
        mode: "0600"

    - name: Copy docker-compose.override.yml from template
      ansible.builtin.template:
        src: "{{ lokal_dir }}/config/services/azuracast/docker-compose.override.yml.j2"
        dest: "{{ azuracast_dir }}/docker-compose.override.yml"
        mode: "0600"

    - name: "Setup Azuracast for stable releases"
      shell: bash -c "yes 'Y' | ./docker.sh setup-release"
      args:
        chdir: "{{ azuracast_dir }}"

    - name: "Basic Azuracast install"
      shell: bash -c "yes '' | ./docker.sh install"
      args:
        chdir: "{{ azuracast_dir }}"
