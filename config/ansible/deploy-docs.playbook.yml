---
- name: Deploy Docs
  hosts: all
  tasks:

    - name: Register primary user's details
      user:
        name: "{{ primary_ssh_user }}"
      register: primary_ssh_user_params

    - name: Set facts
      set_fact:
        lokal_dir: "{{ primary_ssh_user_params.home }}/Lokal"
        docs_dir: "{{ primary_ssh_user_params.home }}/docs"
        domain_mkdocs: "docs.{{ lookup('env', 'DOMAIN') }}"
        cert_resolver: "{{ lookup('env', 'CERT_RESOLVER') | default('dns', true) }}"
        server_is_public: "{{ lookup('env', 'SERVER_IS_PUBLIC') | default(false, true) }}"

    - name: Checkout latest docs to ~/docs
      git:
        repo: https://github.com/Wakoma/docs.git
        dest: "{{ docs_dir }}"
        version: main

    - name: Copy .env from template
      ansible.builtin.template:
        src: "../services/mkdocs/.env.j2"
        dest: "{{ docs_dir }}/.env"

    - name: Copy dockerfile from template
      ansible.builtin.template:
        src: "../services/mkdocs/Dockerfile.j2"
        dest: "{{ docs_dir }}/Dockerfile"

    - name: Copy docker-compose.yml from template
      ansible.builtin.template:
        src: "../services/mkdocs/docker-compose.yml.j2"
        dest: "{{ docs_dir }}/docker-compose.yml"

    - name: Get .env file content
      shell: set -o allexport && . {{ docs_dir }}/.env && env 2> /dev/null && set +o allexport
      register: env_out

    - name: Parse environment
      set_fact:
        env: "{{ ('{' + env_out.stdout_lines | map('regex_replace', '([^=]*)=(.*)', '\"\\1\": \"\\2\"') | join(',') + '}') | from_json }}"

    - name: Docker-compose up
      shell: "docker-compose up --build -d"
      args:
        chdir: "{{ docs_dir }}"

    - name: "Install rebuild docs automation upon source code change"
      shell: "bash -c 'incrontab <(echo {{ docs_dir }}/src IN_MODIFY,IN_CREATE,IN_DELETE docker-compose --env-file {{ docs_dir }}/.env up -d --build)'"
