---
- name: Deploy Docs
  hosts: all
  tasks:

    - name: Register primary user's details
      user:
        name: "{{ primary_ssh_user }}"
      register: primary_ssh_user_params

    - name: Set facts
      set_fact:
        lokal_dir: "{{ primary_ssh_user_params.home }}/Lokal"
        docs_dir: "{{ primary_ssh_user_params.home }}/docs"

    - name: Get .envrc file content
      shell: . {{ lokal_dir }}/.envrc && env
      register: envrc_out

    - name: Parse environment
      set_fact:
        envrc: "{{ ('{' + envrc_out.stdout_lines | map('regex_replace', '([^=]*)=(.*)', '\"\\1\": \"\\2\"') | join(',') + '}') | from_json }}"

    - name: Set facts
      set_fact:
        domain_mkdocs: "doc.{{ envrc.DOMAIN }}"
        cert_resolver: "{{ envrc.CERT_RESOLVER | default('dns') }}"
        server_is_live: "{{ envrc.SERVER_IS_LIVE | default(false) }}"

    - name: Checkout latest docs to ~/docs
      git:
        repo: https://github.com/Wakoma/docs.git
        dest: "{{ docs_dir }}"
        version: main

    - name: Copy .env from template
      ansible.builtin.template:
        src: "{{ lokal_dir }}/config/services/mkdocs/.env.j2"
        dest: "{{ docs_dir }}/.env"

    - name: Copy dockerfile from template
      ansible.builtin.template:
        src: "{{ lokal_dir }}/config/services/mkdocs/Dockerfile.j2"
        dest: "{{ docs_dir }}/Dockerfile"

    - name: Copy docker-compose.yml from template
      ansible.builtin.template:
        src: "{{ lokal_dir }}/config/services/mkdocs/docker-compose.yml.j2"
        dest: "{{ docs_dir }}/docker-compose.yml"

    - name: Get .env file content
      shell: set -o allexport && . {{ docs_dir }}/.env && env && set +o allexport
      register: env_out

    - name: Parse environment
      set_fact:
        env: "{{ ('{' + env_out.stdout_lines | map('regex_replace', '([^=]*)=(.*)', '\"\\1\": \"\\2\"') | join(',') + '}') | from_json }}"

    - name: Docker-compose up
      shell: "docker-compose up --build -d"
      args:
        chdir: "{{ docs_dir }}"

    # - name: Install rebuild automation upon source code change
    #   vars:
    #     incron_user_tables:
    #       - username: "{{ primary_ssh_user }}"
    #         lines:
    #           - name: Rebuild Docs
    #             path: "{{ docs_dir }}/src"
    #             mask: IN_CREATE,IN_DELETE,IN_MODIFY
    #             command: "(cd {{ docs_dir }} && docker-compose up -d --build)"
    #   roles:
    #     - vkill.incron
