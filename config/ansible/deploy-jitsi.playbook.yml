---
- name: Deploy Services
  hosts: all
  tasks:

    - name: Register primary user's details
      user:
        name: "{{ primary_ssh_user }}"
      register: primary_ssh_user_params

    - name: Set facts
      set_fact:
        git_dest: "{{ primary_ssh_user_params.home }}/{{ repo_name }}"
        jitsi_project: "docker-jitsi-meet"
        jitsi_release: "stable-5870"
        domain_jitsi: "meet.{{ lookup('env', 'DOMAIN') }}"
        tz: "{{ lookup('env', 'TZ') }}"
        cert_resolver: "{{ lookup('env', 'CERT_RESOLVER') | default('dns', true) }}"
        server_is_public: "{{ lookup('env', 'SERVER_IS_PUBLIC') | default(false, true) }}"

    - name: Set more facts
      set_fact:
        jitsi_dest: "{{ primary_ssh_user_params.home }}/{{ jitsi_project }}-{{ jitsi_release }}"
        git_dest: "{{ primary_ssh_user_params.home }}/{{ repo_name }}"

    - name: Unarchive latest jitsi source
      ansible.builtin.unarchive:
        src: https://github.com/jitsi/{{ jitsi_project }}/archive/refs/tags/{{ jitsi_release }}.zip
        dest: "{{ primary_ssh_user_params.home }}"
        remote_src: yes

    - name: Set passwords
      become: yes
      become_user: root
      set_fact:
        jicofo_auth_password: "{{ lookup('password', '~/.ansible.pass/jicofo_auth_password length=16 chars=ascii_letters') }}"
        jvb_auth_password: "{{ lookup('password', '~/.ansible.pass/jvb_auth_password length=16 chars=ascii_letters') }}"
        jigasi_xmpp_password: "{{ lookup('password', '~/.ansible.pass/jigasi_xmpp_password length=16 chars=ascii_letters') }}"
        jibri_recorder_password: "{{ lookup('password', '~/.ansible.pass/jibri_recorder_password length=16 chars=ascii_letters') }}"
        jibri_xmpp_password: "{{ lookup('password', '~/.ansible.pass/jibri_xmpp_password length=16 chars=ascii_letters') }}"

    - name: Make a backup of original docker-compose file
      ansible.builtin.copy:
        remote_src: true
        src: "{{ jitsi_dest }}/docker-compose.yml"
        dest: "{{ jitsi_dest }}/docker-compose.yml.bak"

    - name: Copy .env from template
      ansible.builtin.template:
        src: "../services/jitsi/.env.j2"
        dest: "{{ jitsi_dest }}/.env"

    - name: Copy docker-compose.yml from template
      ansible.builtin.template:
        src: "../services/jitsi/docker-compose.yml.j2"
        dest: "{{ jitsi_dest }}/docker-compose.yml"

    - name: Get .env file content
      shell: set -o allexport && . {{ jitsi_dest }}/.env && env 2> /dev/null && set +o allexport
      register: updated_env_out

    - name: Parse environment
      set_fact:
        updated_env: "{{ ('{' + updated_env_out.stdout_lines | map('regex_replace', '([^=]*)=(.*)', '\"\\1\": \"\\2\"') | join(',') + '}') | from_json }}"
    
    - name: Create directories
      file:
        path: "{{ updated_env.CONFIG }}/{{ item }}"
        state: directory
      with_items:
        - web/letsencrypt
        - transcripts
        - prosody/config
        - prosody/prosody-plugins-custom
        - jicofo
        - jvb
        - jigasi
        - jibri

    - name: Docker-compose up
      shell: "docker-compose up -d"
      args:
        chdir: "{{ jitsi_dest }}"
