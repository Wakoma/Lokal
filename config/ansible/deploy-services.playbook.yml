---
- name: Deploy Services
  hosts: all
  tasks:

    - name: Register primary user's details
      user:
        name: "{{ primary_ssh_user }}"
      register: primary_ssh_user_params

    - name: Set facts
      set_fact:
        server_is_public: "{{ lookup('env', 'SERVER_IS_PUBLIC') | default(false, true) }}"
        git_dest: "{{ primary_ssh_user_params.home }}/{{ repo_name }}"
        acme_certs_dir: "{{ lookup('env', 'ACME_CERTS_DIR') | default(false, true) }}"

    - name: Checkout git repo
      git:
        repo: "{{ git_repo }}"
        dest: "{{ git_dest }}"
        version: "{{ git_version }}"
      vars:
        git_repo: "https://github.com/{{ repo_owner }}/{{ repo_name }}.git"
        git_version: "{{ repo_branch }}"

    - name: Copy .envrc.quickstart in place
      ansible.builtin.copy:
        remote_src: true
        src: "{{ git_dest }}/.envrc.quickstart"
        dest: "{{ git_dest }}/.envrc"
        owner: ubuntu
        group: ubuntu
        mode: 0600

    - name: Allow .envrc
      shell: "direnv allow ."
      args:
        chdir: "{{ git_dest }}"

    - name: Make acme certs directory if it does not yet exist
      become: yes
      become_user: root
      file:
        path: "{{ acme_certs_dir }}"
        state: directory
        owner: root
        group: root
        mode: 0700
      when: not server_is_public

    - name: Docker-compose pull
      shell: "direnv exec . dc pull traefik grafana netdata prometheus portainer wordpress matomo transmission unifi-poller unifi-controller jellyfin"
      args:
        chdir: "{{ git_dest }}"

    - name: Docker-compose up mariadb
      shell: "direnv exec . dc up -d mariadb"
      args:
        chdir: "{{ git_dest }}"

    - name: Init databases
      shell: "direnv exec . config/services/mariadb/scripts/init-databases.sh"
      args:
        chdir: "{{ git_dest }}"

    - name: Docker-compose up
      shell: "direnv exec . dc up -d  traefik grafana netdata prometheus portainer wordpress matomo transmission unifi-poller unifi-controller jellyfin"
      args:
        chdir: "{{ git_dest }}"
